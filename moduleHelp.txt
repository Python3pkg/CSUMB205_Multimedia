Help on module simpleImage.ImageClass in simpleImage:

NAME
    simpleImage.ImageClass

DESCRIPTION
    -------------------------------------------------------------------------------
    CST205_PIL.PY
    
    AUTHOR(S):     Peter Walker    pwalker@csumb.edu
    
    PURPOSE-  This module will be used by CST 205 for image manipulation. It
                creates some classes that will use the PIL package (installed
                by calling 'pip3 install Pillow')
    
    CLASSES-
        rgbPixel
        rgbImage
    -------------------------------------------------------------------------------

CLASSES
    builtins.object
        rgbImage
        rgbPixel
    
    class rgbImage(builtins.object)
     |  ---------------------
     |  Class Attributes
     |  
     |  Methods defined here:
     |  
     |  __init__(self, filename='', saveTo='', blank=False, width=100, height=100)
     |      Object initialization
     |      ARGS:
     |          self        this Object
     |          filename    String, the location of the picture
     |          saveTo      String, the location that this picture will be saved to
     |          blank       Boolean, whether this image should be a blank image
     |              width   Integer, the width of the blank image
     |              height  Integer, the height of the blank image
     |  
     |  __str__(self)
     |      Returns a string representation of this object
     |  
     |  getAllPixels(self)
     |      Converts this object's 'pixels' attribute into a 1-dimensional array
     |  
     |  getPixel(self, *args)
     |      Gets an rgbPixel object at the specified (x,y) coordinate
     |      ARGS:
     |          self    this Object
     |          x       The X coordinate of the pixel
     |          y       The Y coordinate of the pixel
     |              or
     |          (x,y)   The X and Y coordinate within a tuple or list
     |      RETURNS:
     |          rgbPixel object
     |      RAISES:
     |          ValueError - 'x' or 'y' is out of the picture's bounds
     |  
     |  reset(self)
     |      Resets this object to the original image
     |  
     |  save(self, filename='', forceOverwrite=False)
     |      This will save the current object to a specified location
     |      ARGS:
     |          self            this Object
     |          filename        OPTIONAL. String, the location to be save to.
     |          forceOverwrite  OPTIONAL. Boolean, whether to force overwrite of file
     |                           at location 'filename' or 'self.outputFilename'
     |      RETURNS:
     |          none
     |      RAISES:
     |          none.
     |          Will ask user if they wish to overwrite a file if it exists at the given
     |           location in filename, or at self.outputFilename
     |  
     |  show(self)
     |      Shows the image the user is currently working on
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  height = 0
     |  
     |  inputFilename = ''
     |  
     |  outputFilename = ''
     |  
     |  pixels = []
     |  
     |  width = 0
    
    class rgbPixel(builtins.object)
     |  ---------------------
     |  Class Attributes
     |  
     |  Methods defined here:
     |  
     |  __eq__ = wrapper(*args, **kwargs)
     |  
     |  __ge__ = wrapper(*args, **kwargs)
     |  
     |  __gt__ = wrapper(*args, **kwargs)
     |  
     |  __init__(self, *args)
     |      Object initialization
     |      ARGS:
     |          self    this Object
     |          (r,g,b) Tuple/List of pixel's color's R,G, and B values
     |              or
     |          r       A pixel value for the Red aspect
     |          g       A pixel value for the Green aspect
     |          b       A pixel value for the Blue aspect
     |      
     |          (x,y)   Tuple/List of the pixel's X and Y coordinate
     |              or
     |          x       The X-part of the this pixel's location within the picture
     |          y       The Y-part of the this pixel's location within the picture
     |  
     |  __le__ = wrapper(*args, **kwargs)
     |  
     |  __lt__ = wrapper(*args, **kwargs)
     |  
     |  __ne__ = wrapper(*args, **kwargs)
     |  
     |  __str__(self)
     |      Returns a string representation of this object
     |  
     |  cdist(self, **kwargs)
     |      Gets the color distance between this pixel and a specified color or pixel object
     |      ARGS:
     |          color   tuple, 3 integer values where 0<=x<=255
     |          pixel   an rgbPixel object
     |      RETURNS:
     |          A Float, that is this pixel's color's distance to the given rgbPixel or
     |           color tuple.
     |          A negative number means that this pixel will likely be lighter, while
     |           a positive number means that this pixel will likely be darker
     |  
     |  getBlue(self)
     |  
     |  getColor(self)
     |      #END DEF
     |  
     |  getCoord(self)
     |      #END DEF
     |  
     |  getGreen(self)
     |  
     |  getRed(self)
     |  
     |  getX(self)
     |  
     |  getY(self)
     |  
     |  ldist(self, pixel)
     |      Returns the length distance between two rgbPixels according to their
     |       X and Y values.
     |  
     |  setBlue = wrapper(*args, **kwargs)
     |  
     |  setColor(self, *args)
     |      Sets this pixel's R,G, and B values to the given values
     |      ARGS:
     |          (R,G,B)     Tuple/List of three integers
     |              or
     |          R           Integer value, the red value of the color
     |          G           Integer value, the green value of the color
     |          B           Integer value, the blue value of the color
     |  
     |  setGreen = wrapper(*args, **kwargs)
     |  
     |  setRed = wrapper(*args, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None

FILE
    /Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/simpleImage/ImageClass.py